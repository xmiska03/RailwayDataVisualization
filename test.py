import numpy as np

# novy sposob

# riadkova celkova matica
total = np.array([
    [2.379899747641084, 0.016976920149017447, -0.00134087602179161, -0.001339982402316907],
    [-0.012761058508046258, 3.181002108684724, 0.002984715577234905, 0.0029827264298991933],
    [0.002981207629178064, -0.040539587515428355, -1.0006615392785323, -0.9999946538808124],
    [-13.5789813849019, 0.1600936148599669, -0.26170854582004477, -0.06160077604608937]
])

# riadkovy vektor
some_point = np.array([[-0.1931001972054227356, -0.1584329248824539460, 12.88496650479609151, 1]])

print(np.matmul(some_point, total))

# stary sposob

# stlpcovy vektor
some_point = np.array([[-0.1931001972054227356], [-0.1584329248824539460], [12.88496650479609151], [1]])

# transformacna matica - stlpcova
transf = np.array([
    [ 9.99984747e-01, -5.35417137e-03, -1.35593924e-03, -5.70578831e+00],
    [ 5.35818714e-03,  9.99981218e-01,  2.97550644e-03,  5.12978372e-02],
    [ 1.33998240e-03, -2.98272643e-03,  9.99994654e-01,  6.16007760e-02],
    [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  1.00000000e+00]
])

# projekcna matica - riadkova
proj = np.array([
    [ 2.37992773,  0.,          0.00620828,  0.        ],
    [ 0.,          3.1809127,  -0.05000468,  0.        ],
    [ 0.,          0.,         -1.00066689, -0.20006669],
    [ 0.,          0.,         -1.,          0.        ]
])

proj_inv = np.array([
    [ 2.37992773,  0.,          0.,          0.        ],
    [ 0.,          3.1809127,   0.,          0.        ],
    [ 0.00620828, -0.05000468, -1.00066689, -1.        ],
    [ 0.,          0.,         -0.20006669,  0.        ]
])

point_view_sp = np.matmul(transf, some_point)
# prevod na riadkovy
point_view_sp = point_view_sp.transpose()

print(np.matmul(point_view_sp, proj_inv))

#print(np.matmul(proj, np.matmul(transf, some_point)))